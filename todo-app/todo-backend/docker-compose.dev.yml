services:
  mongo:
    # when I created image from Dockerfile with instructions including COPY
    # a not pulling image mongo from Docker Hub
    # image: initialized-mongo
    container_name: mongo_container
    image: mongo
    ports:
      - 3456:27017
    environment:
      # create a new user and set the user's password
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: example
      # tells MongoDB to create a database with the name
      MONGO_INITDB_DATABASE: the_database
    volumes:
      # bind mount - binding mongo-init.js file into container
      - ./mongo/mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js
      ### TO STORE DATA
      # option 1 bind mount
      - ./mongo_data:/data/db
### TO STORE DATA
# option 2 volume
#volumes:
#  mongo_data:

  redis:
    container_name: redis_container
    #image: redis:6.2-alpine
    image: redis:7.4
    #restart: always
    ports:
      - 6379:6379
    command: ['redis-server', '--appendonly', 'yes'] # Overwrite the CMD
    volumes: # Declare the volume
      - ./redis_data:/data


  server:
    container_name: backend_container_dev
    image: todo-backend-dev
    # Declares where to build if image is not found
    build:
      # The context will pick this directory as the "build context"
      context: .
      # This will simply tell which dockerfile to read
      dockerfile: dev.Dockerfile
    volumes:
      # The path can be relative, so ./ is enough to say "the same location as the docker-compose.yml"
      - ./:/usr/src/app
    ports:
      # first port - out of docker
      # second port - inside docker
      - 3000:3000
    environment:
      # check PORTs
      - REDIS_URL=redis://redis:6379
      - MONGO_URL=mongodb://the_username:the_password@mongo:27017/the_database
